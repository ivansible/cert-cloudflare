---
- name: add certbot ppa repository
  apt_repository:
    repo: ppa:certbot/certbot
    codename: "{{ ansible_lsb.codename }}"
    filename: certbot
    update_cache: yes
  tags: le_cloudflare_install

- name: install certbot packages
  apt:
    name:
      - certbot
      - python3-certbot-dns-cloudflare
      - python3-pip  # just in case
      - ssl-cert     # for ssl-cert unix group
    install_recommends: no
  tags: le_cloudflare_install


- name: create unix group for letsencrypt certificate access
  group:
    name: "{{ certbot_group }}"
    state: present
  tags: le_cloudflare_group

- name: grant certbot group access to letsencrypt files
  file:
    path: /etc/letsencrypt/{{ item }}
    state: directory
    owner: root
    group: "{{ certbot_group }}"
    mode: 0750
  loop:
    - archive
    - live
  tags: le_cloudflare_group

- name: create directory for hooks
  file:
    path: /etc/letsencrypt/renewal-hooks/{{ item }}
    state: directory
    owner: root
    group: root
    mode: 0755
  loop:
    - pre
    - post
    - deploy
  tags: le_replica_group

- name: create a post-renewal hook to fix permissions of private keys
  copy:
    content: |
      #!/bin/bash
      find /etc/letsencrypt/archive -name privkey*.pem | xargs --no-run-if-empty chgrp {{ certbot_group }}
      find /etc/letsencrypt/archive -name privkey*.pem | xargs --no-run-if-empty chmod o=
    dest:
      /etc/letsencrypt/renewal-hooks/post/privkey-permissions
    owner: root
    group: root
    mode: 0750
  tags: le_replica_group


- name: create cloudflare configuration for certbot
  copy:
    dest: /etc/letsencrypt/dns-cloudflare.ini
    content: |
      dns_cloudflare_email = {{ certbot_cloudflare_email }}
      dns_cloudflare_api_key = {{ certbot_cloudflare_api_key }}
    owner: root
    mode: 0600
  tags: le_cloudflare_config

- name: create certbot configuration
  copy:
    dest: /etc/letsencrypt/cli.ini
    content: |
      # Because we are using logrotate for greater flexibility,
      # disable the internal certbot logrotation.
      max-log-backups = 0
      dns-cloudflare-credentials = /etc/letsencrypt/dns-cloudflare.ini
      server = https://{{ certbot_acme_server }}/directory
    owner: root
    mode: 0600
  tags: le_cloudflare_config


- name: setup letsencrypt account registration
  include_tasks: account.yml
  loop: "{{ certbot_acme_accounts
          | selectattr('server', 'equalto', certbot_acme_server)
          | list
          | json_query('[?!!active]')
          | list }}"
  loop_control:
    label: "{{ item.name }}"
  when: certbot_renewal_enable |bool
  tags: le_cloudflare_accounts


- name: produce letsencrypt certificates
  include_tasks: certificate.yml
  loop: "{{ certbot_certificates
          | json_query('[?!!active]')
          | list }}"
  loop_control:
    label: "{{ item.name }}"
  when: certbot_renewal_enable |bool
  tags: le_cloudflare_certificate

- name: enable automatic certificate renewals twice daily
  systemd:
    name: certbot.timer
    state: "{{ certbot_renewal_enable |bool |ternary('started', 'stopped') }}"
    enabled: "{{ certbot_renewal_enable |bool }}"
    daemon_reload: yes
  tags: le_cloudflare_renewal
...
